begin
#include "uart_w.wach"
#include "kernel.wach"
#include "string.wach"
#include "frame.wach"

    extern char *buffer;

    void process_command(char *command) is
        if (strcmp(command, "ls") == 0) then
            uart_write_string("filesystem not yet available");
        else if (strcmp(command, "exit") == 0) then
            panic("attempting to kill init");
        else if (strcmp(command, "swi") == 0) then
            begin inline
                mov r7, #42
                swi 0
            end
        else if (strcmp(command, "mem") == 0) then
            uint32 m = mm_mem_used();
            uart_write_string("Memory used: ");
            uart_write_int(m * 4096);
            uart_write_string(" bytes");
        else if (strlen(command) == 0) then
        else
            uart_write_string("command not found: ");
            uart_write_string(command);
        end end end end end

        if (strlen(command) != 0) then
            uart_write_newline();
        else skip; end

    end

    void run_shell() is
        while true do
            uart_write_string("waccOS % ");

            char *command = buffer;
            char input = '\0';

            while (input != '\r') do
                input = uart_get_char();

                if (input == '\r') then
                    *command = '\0';
                    uart_write_newline();
                else if (input == '\b') then
                    if command != buffer then
                        uart_write_char('\b');
                        uart_write_char(' ');
                        uart_write_char('\b');
                        command--;
                    end
                else
                    uart_write_char(input);
                    *command++ = input;
                end end
            end

            process_command(buffer);
        end
    end
end
